{"version":3,"file":"index.js","sources":["src/component/bingmaps-source/source.vue?rollup-plugin-vue=script.js","src/component/bingmaps-source/source.vue","src/component/bingmaps-source/index.js"],"sourcesContent":["\nimport BingMapsSource from 'ol/source/BingMaps'\nimport { tileSource } from '../../mixin'\nimport { makeWatchers } from '../../util/vue-helpers'\n\nconst BINGMAPS_MAX_ZOOM = 21\nconst BINGMAPS_CULTURE = 'en-us'\n\nexport default {\n  name: 'vl-source-bingmaps',\n  mixins: [tileSource],\n  props: {\n    /**\n     * Enables hidpi tiles.\n     * @type {boolean}\n     */\n    hidpi: {\n      type: Boolean,\n      default: false,\n    },\n    /**\n     * Culture code.\n     * @type {string}\n     */\n    culture: {\n      type: String,\n      default: BINGMAPS_CULTURE,\n    },\n    /**\n     * Bing Maps API key.\n     * @type {string}\n     */\n    apiKey: {\n      type: String,\n      required: true,\n    },\n    /**\n     * Type of imagery.\n     * @type {string}\n     */\n    imagerySet: {\n      type: String,\n      required: true,\n    },\n    maxZoom: {\n      type: Number,\n      default: BINGMAPS_MAX_ZOOM,\n    },\n    url: String,\n  },\n  methods: {\n    /**\n     * @return {BingMaps}\n     * @protected\n     */\n    createSource () {\n      return new BingMapsSource({\n        cacheSize: this.cacheSize,\n        hidpi: this.hidpi,\n        culture: this.culture,\n        key: this.apiKey,\n        imagerySet: this.imagerySet,\n        maxZoom: this.maxZoom,\n        reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n        wrapX: this.wrapX,\n        transition: this.transition,\n        tileLoadFunction: this.tileLoadFunction,\n      })\n    },\n  },\n  watch: {\n    ...makeWatchers([\n      'apiKey',\n      'imagerySet',\n    ], () => function () {\n      this.scheduleRecreate()\n    }),\n  },\n}\n","<script>\n  import BingMapsSource from 'ol/source/BingMaps'\n  import { tileSource } from '../../mixin'\n  import { makeWatchers } from '../../util/vue-helpers'\n\n  const BINGMAPS_MAX_ZOOM = 21\n  const BINGMAPS_CULTURE = 'en-us'\n\n  export default {\n    name: 'vl-source-bingmaps',\n    mixins: [tileSource],\n    props: {\n      /**\n       * Enables hidpi tiles.\n       * @type {boolean}\n       */\n      hidpi: {\n        type: Boolean,\n        default: false,\n      },\n      /**\n       * Culture code.\n       * @type {string}\n       */\n      culture: {\n        type: String,\n        default: BINGMAPS_CULTURE,\n      },\n      /**\n       * Bing Maps API key.\n       * @type {string}\n       */\n      apiKey: {\n        type: String,\n        required: true,\n      },\n      /**\n       * Type of imagery.\n       * @type {string}\n       */\n      imagerySet: {\n        type: String,\n        required: true,\n      },\n      maxZoom: {\n        type: Number,\n        default: BINGMAPS_MAX_ZOOM,\n      },\n      url: String,\n    },\n    methods: {\n      /**\n       * @return {BingMaps}\n       * @protected\n       */\n      createSource () {\n        return new BingMapsSource({\n          cacheSize: this.cacheSize,\n          hidpi: this.hidpi,\n          culture: this.culture,\n          key: this.apiKey,\n          imagerySet: this.imagerySet,\n          maxZoom: this.maxZoom,\n          reprojectionErrorThreshold: this.reprojectionErrorThreshold,\n          wrapX: this.wrapX,\n          transition: this.transition,\n          tileLoadFunction: this.tileLoadFunction,\n        })\n      },\n    },\n    watch: {\n      ...makeWatchers([\n        'apiKey',\n        'imagerySet',\n      ], () => function () {\n        this.scheduleRecreate()\n      }),\n    },\n  }\n</script>\n","import { pick } from '../../util/minilo'\nimport Source from './source.vue'\n\n/**\n * @param {Vue} Vue\n * @param {VueLayersOptions} [options]\n */\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  Source,\n  plugin as install,\n}\n"],"names":["BINGMAPS_MAX_ZOOM","BINGMAPS_CULTURE","name","mixins","tileSource","props","hidpi","type","Boolean","default","culture","String","apiKey","required","imagerySet","maxZoom","Number","url","methods","createSource","BingMapsSource","cacheSize","key","reprojectionErrorThreshold","wrapX","transition","tileLoadFunction","watch","makeWatchers","scheduleRecreate","plugin","Vue","options","installed","pick","Source","component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAMA,iBAAiB,GAAG,EAA1B;AACA,IAAMC,gBAAgB,GAAG,OAAzB;AAEA,aAAe;EACbC,IAAI,EAAE,oBADO;EAEbC,MAAM,EAAE,CAACC,UAAD,CAFK;EAGbC,KAAK,EAAE;;;;;IAKLC,KAAK,EAAE;MACLC,IAAI,EAAEC,OADD;MAELC,OAAO,EAAE;KAPN;;;;;;IAaLC,OAAO,EAAE;MACPH,IAAI,EAAEI,MADC;MAEPF,OAAO,EAAER;KAfN;;;;;;IAqBLW,MAAM,EAAE;MACNL,IAAI,EAAEI,MADA;MAENE,QAAQ,EAAE;KAvBP;;;;;;IA6BLC,UAAU,EAAE;MACVP,IAAI,EAAEI,MADI;MAEVE,QAAQ,EAAE;KA/BP;IAiCLE,OAAO,EAAE;MACPR,IAAI,EAAES,MADC;MAEPP,OAAO,EAAET;KAnCN;IAqCLiB,GAAG,EAAEN;GAxCM;EA0CbO,OAAO,EAAE;;;;;IAKPC,YALO,0BAKS;aACP,IAAIC,cAAJ,CAAmB;QACxBC,SAAS,EAAE,KAAKA,SADQ;QAExBf,KAAK,EAAE,KAAKA,KAFY;QAGxBI,OAAO,EAAE,KAAKA,OAHU;QAIxBY,GAAG,EAAE,KAAKV,MAJc;QAKxBE,UAAU,EAAE,KAAKA,UALO;QAMxBC,OAAO,EAAE,KAAKA,OANU;QAOxBQ,0BAA0B,EAAE,KAAKA,0BAPT;QAQxBC,KAAK,EAAE,KAAKA,KARY;QASxBC,UAAU,EAAE,KAAKA,UATO;QAUxBC,gBAAgB,EAAE,KAAKA;OAVlB,CAAP;;GAhDS;EA8DbC,KAAK,oBACAC,YAAY,CAAC,CACd,QADc,EAEd,YAFc,CAAD,EAGZ;WAAM,YAAY;WACdC,gBAAL;KADC;GAHY,CADZ;CA9DP;;ACLY,2BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAZ;;;;;AAIA,SAASC,MAAT,CAAiBC,GAAjB,EAAoC;MAAdC,OAAc,uEAAJ,EAAI;;MAC9BF,MAAM,CAACG,SAAX,EAAsB;;;;EAGtBH,MAAM,CAACG,SAAP,GAAmB,IAAnB;EAEAD,OAAO,GAAGE,IAAI,CAACF,OAAD,EAAU,gBAAV,CAAd;;iBACcG,MAAd,EAAsBH,OAAtB;;EAEAD,GAAG,CAACK,SAAJ,CAAcD,MAAM,CAACjC,IAArB,EAA2BiC,MAA3B;;;;;;"}