{"version":3,"file":"interactions-container.js","sources":["src/mixin/interactions-container.js"],"sourcesContent":["import Collection from 'ol/Collection'\nimport Interaction from 'ol/interaction/Interaction'\nimport Vue from 'vue'\nimport { merge as mergeObs } from 'rxjs/observable'\nimport { getInteractionId, getInteractionPriority, initializeInteraction } from '../ol-ext'\nimport { instanceOf } from '../util/assert'\nimport rxSubs from './rx-subs'\nimport identMap from './ident-map'\nimport { observableFromOlEvent } from '../rx-ext'\n\nexport default {\n  mixins: [identMap, rxSubs],\n  computed: {\n    interactionIds () {\n      if (!this.rev) return []\n\n      return this.getInteractions().map(getInteractionId)\n    },\n    interactionsCollectionIdent () {\n      if (!this.olObjIdent) return\n\n      return this.makeIdent(this.olObjIdent, 'interactions_collection')\n    },\n  },\n  methods: {\n    /**\n     * @param {Interaction|Vue} interaction\n     * @return {void}\n     */\n    addInteraction (interaction) {\n      interaction = interaction instanceof Vue ? interaction.$interaction : interaction\n      instanceOf(interaction, Interaction)\n\n      if (this.getInteractionById(getInteractionId(interaction)) == null) {\n        initializeInteraction(interaction)\n        this.$interactionsCollection.push(interaction)\n        this.sortInteractions()\n      }\n    },\n    /**\n     * @param {Interaction|Vue} interaction\n     * @return {void}\n     */\n    removeInteraction (interaction) {\n      interaction = this.getInteractionById(getInteractionId(interaction))\n      if (!interaction) return\n\n      this.$interactionsCollection.remove(interaction)\n      this.sortInteractions()\n    },\n    /**\n     * @return {Interaction[]}\n     */\n    getInteractions () {\n      return this.$interactionsCollection.getArray()\n    },\n    /**\n     * @return {Collection<Interaction>>}\n     */\n    getInteractionsCollection () {\n      return this._interactionsCollection\n    },\n    /**\n     * @param {string|number} interactionId\n     * @return {Interaction|undefined}\n     */\n    getInteractionById (interactionId) {\n      return this.$interactionsCollection.getArray().find(interaction => {\n        return getInteractionId(interaction) === interactionId\n      })\n    },\n    /**\n     * @return {void}\n     */\n    sortInteractions (sorter) {\n      sorter || (sorter = this.getDefaultInteractionsSorter())\n\n      this.$interactionsCollection.getArray().sort(sorter)\n    },\n    /**\n     * @return {function}\n     * @protected\n     */\n    getDefaultInteractionsSorter () {\n      // sort interactions by priority in asc order\n      // the higher the priority, the earlier the interaction handles the event\n      return (a, b) => {\n        let ap = getInteractionPriority(a) || 0\n        let bp = getInteractionPriority(b) || 0\n        return ap === bp ? 0 : ap - bp\n      }\n    },\n    /**\n     * @return {void}\n     */\n    clearInteractions () {\n      this.$interactionsCollection.clear()\n    },\n    /**\n     * @returns {Object}\n     * @protected\n     */\n    getServices () {\n      const vm = this\n\n      return {\n        get interactionsContainer () { return vm },\n      }\n    },\n  },\n  created () {\n    this._interactionsCollection = this.instanceFactoryCall(this.interactionsCollectionIdent, () => new Collection())\n\n    this::defineServices()\n    this::subscribeToCollectionEvents()\n  },\n}\n\nfunction defineServices () {\n  Object.defineProperties(this, {\n    $interactionsCollection: {\n      enumerable: true,\n      get: this.getInteractionsCollection,\n    },\n  })\n}\n\nfunction subscribeToCollectionEvents () {\n  const adds = observableFromOlEvent(this.$interactionsCollection, 'add')\n  const removes = observableFromOlEvent(this.$interactionsCollection, 'remove')\n\n  this.subscribeTo(mergeObs(adds, removes), ({ type, element }) => {\n    ++this.rev\n\n    this.$nextTick(() => {\n      this.$emit(type + ':interaction', element)\n    })\n  })\n}\n"],"names":["mixins","identMap","rxSubs","computed","interactionIds","rev","getInteractions","getInteractionId","interactionsCollectionIdent","olObjIdent","makeIdent","methods","addInteraction","interaction","Vue","$interaction","instanceOf","Interaction","getInteractionById","initializeInteraction","$interactionsCollection","push","sortInteractions","removeInteraction","remove","getArray","getInteractionsCollection","_interactionsCollection","interactionId","sorter","getDefaultInteractionsSorter","a","b","ap","getInteractionPriority","bp","clearInteractions","clear","getServices","vm","interactionsContainer","created","instanceFactoryCall","Collection","defineServices","subscribeToCollectionEvents","enumerable","get","adds","observableFromOlEvent","removes","subscribeTo","mergeObs","type","element","$nextTick","$emit"],"mappings":"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"}