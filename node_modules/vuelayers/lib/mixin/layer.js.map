{"version":3,"file":"layer.js","sources":["src/mixin/layer.js"],"sourcesContent":["import Vue from 'vue'\nimport { getLayerId, initializeLayer, setLayerId } from '../ol-ext'\nimport { hasLayer, hasMap } from '../util/assert'\nimport { isEqual } from '../util/minilo'\nimport mergeDescriptors from '../util/multi-merge-descriptors'\nimport { observableFromOlEvent } from '../rx-ext'\nimport { makeWatchers } from '../util/vue-helpers'\nimport cmp from './ol-virt-cmp'\nimport sourceContainer from './source-container'\nimport useMapCmp from './use-map-cmp'\n\nexport default {\n  mixins: [cmp, useMapCmp, sourceContainer],\n  props: {\n    /**\n     * The bounding extent for layer rendering defined in the map view projection.\n     * The layer will not be rendered outside of this extent.\n     * @default undefined\n     * @type {number[]|undefined}\n     */\n    extent: {\n      type: Array,\n      validator: value => value.length === 4,\n    },\n    minResolution: Number,\n    maxResolution: Number,\n    opacity: {\n      type: Number,\n      default: 1,\n    },\n    overlay: {\n      type: Boolean,\n      default: false,\n    },\n    visible: {\n      type: Boolean,\n      default: true,\n    },\n    zIndex: Number,\n  },\n  methods: {\n    /**\n     * @return {Promise<module:ol/layer/BaseLayer~BaseLayer>}\n     * @protected\n     */\n    async createOlObject () {\n      let layer = await this.createLayer()\n\n      initializeLayer(layer, this.id)\n\n      return layer\n    },\n    /**\n     * @return {module:ol/layer/BaseLayer~BaseLayer|Promise<module:ol/layer/BaseLayer~BaseLayer>}\n     * @protected\n     * @abstract\n     */\n    createLayer () {\n      throw new Error('Not implemented method')\n    },\n    /**\n     * @return {Promise<Vue<module:ol/layer/BaseLayer~BaseLayer>>}\n     * @protected\n     */\n    init () {\n      return this::cmp.methods.init()\n    },\n    /**\n     * @return {void|Promise}\n     * @protected\n     */\n    deinit () {\n      return this::cmp.methods.deinit()\n    },\n    /**\n     * @param {number[]} pixel\n     * @return {boolean}\n     */\n    isAtPixel (pixel) {\n      hasMap(this)\n\n      return this.$map.forEachLayerAtPixel(pixel, layer => layer === this.$layer)\n    },\n    /**\n     * @returns {Object}\n     * @protected\n     */\n    getServices () {\n      const vm = this\n\n      return mergeDescriptors(\n        this::cmp.methods.getServices(),\n        this::sourceContainer.methods.getServices(),\n        {\n          get layer () { return vm.$layer },\n        },\n      )\n    },\n    /**\n     * @return {{\n     *     setSource: function(module:ol/source/Source~Source): void,\n     *     getSource: function(): module:ol/source/Source~Source\n     *   }|undefined}\n     * @protected\n     */\n    getSourceTarget () {\n      return this.$layer\n    },\n    /**\n     * @return {Promise}\n     * @protected\n     */\n    mount () {\n      if (this.overlay && this.$map) {\n        this.setMap(this.$map)\n      } else if (this.$layersContainer) {\n        this.$layersContainer.addLayer(this)\n      }\n\n      return this::cmp.methods.mount()\n    },\n    /**\n     * @return {Promise}\n     * @protected\n     */\n    unmount () {\n      if (this.overlay) {\n        this.setMap(undefined)\n      } else if (this.$layersContainer) {\n        this.$layersContainer.removeLayer(this)\n      }\n\n      return this::cmp.methods.unmount()\n    },\n    /**\n     * Updates layer state\n     * @return {Promise}\n     */\n    refresh () {\n      return this::cmp.methods.refresh()\n    },\n    /**\n     * Internal usage only in components that doesn't support refreshing.\n     * @return {Promise}\n     * @protected\n     */\n    remount () {\n      return this::cmp.methods.remount()\n    },\n    /**\n     * Internal usage only in components that doesn't support refreshing.\n     * @return {Promise}\n     * @protected\n     */\n    recreate () {\n      return this::cmp.methods.remount()\n    },\n    /**\n     * @protected\n     */\n    subscribeAll () {\n      this::cmp.methods.subscribeAll()\n      this::subscribeToLayerEvents()\n    },\n    /**\n     * @param {module:ol/Map~Map|Vue|undefined} map\n     */\n    setMap (map) {\n      hasLayer(this)\n\n      map = map instanceof Vue ? map.$map : map\n\n      this.$layer.setMap(map)\n    },\n  },\n  watch: {\n    id (value) {\n      if (!this.$layer || value === getLayerId(this.$layer)) {\n        return\n      }\n\n      setLayerId(this.$layer, value)\n    },\n    maxResolution (value) {\n      if (!this.$layer || value === this.$layer.getMaxResolution()) {\n        return\n      }\n\n      this.$layer.setMaxResolution(value)\n    },\n    minResolution (value) {\n      if (!this.$layer || value === this.$layer.getMinResolution()) {\n        return\n      }\n\n      this.$layer.setMinResolution(value)\n    },\n    opacity (value) {\n      if (!this.$layer || value === this.$layer.getOpacity()) {\n        return\n      }\n\n      this.$layer.setOpacity(value)\n    },\n    visible (value) {\n      if (!this.$layer || value === this.$layer.getVisible()) {\n        return\n      }\n\n      this.$layer.setVisible(value)\n    },\n    zIndex (value) {\n      if (!this.$layer || value === this.$layer.getZIndex()) {\n        return\n      }\n\n      this.$layer.setZIndex(value)\n    },\n    extent (value) {\n      if (!this.$layer || isEqual(value, this.$layer.getExtent())) {\n        return\n      }\n\n      this.$layer.setExtent(value)\n    },\n    ...makeWatchers([\n      'overlay',\n    ], () => function () {\n      this.scheduleRecreate()\n    }),\n  },\n  stubVNode: {\n    attrs () {\n      return {\n        id: this.vmId,\n        class: this.cmpName,\n      }\n    },\n  },\n  created () {\n    this::defineServices()\n  },\n}\n\nfunction defineServices () {\n  Object.defineProperties(this, {\n    $layer: {\n      enumerable: true,\n      get: () => this.$olObject,\n    },\n    $source: {\n      enumerable: true,\n      get: this.getSource,\n    },\n    $map: {\n      enumerable: true,\n      get: () => this.$services && this.$services.map,\n    },\n    $view: {\n      enumerable: true,\n      get: () => this.$services && this.$services.view,\n    },\n    $layersContainer: {\n      enumerable: true,\n      get: () => this.$services && this.$services.layersContainer,\n    },\n  })\n}\n\nfunction subscribeToLayerEvents () {\n  hasLayer(this)\n\n  const events = observableFromOlEvent(this.$layer, [\n    'postcompose',\n    'precompose',\n    'render',\n  ])\n\n  this.subscribeTo(events, evt => {\n    this.$emit(evt.type, evt)\n  })\n}\n"],"names":["mixins","cmp","useMapCmp","sourceContainer","props","extent","type","Array","validator","value","length","minResolution","Number","maxResolution","opacity","default","overlay","Boolean","visible","zIndex","methods","createOlObject","createLayer","layer","initializeLayer","id","Error","init","deinit","isAtPixel","pixel","hasMap","$map","forEachLayerAtPixel","$layer","getServices","vm","mergeDescriptors","getSourceTarget","mount","setMap","$layersContainer","addLayer","unmount","undefined","removeLayer","refresh","remount","recreate","subscribeAll","subscribeToLayerEvents","map","hasLayer","Vue","watch","getLayerId","setLayerId","getMaxResolution","setMaxResolution","getMinResolution","setMinResolution","getOpacity","setOpacity","getVisible","setVisible","getZIndex","setZIndex","isEqual","getExtent","setExtent","makeWatchers","scheduleRecreate","stubVNode","attrs","vmId","class","cmpName","created","defineServices","enumerable","get","$olObject","$source","getSource","$services","$view","view","layersContainer","events","observableFromOlEvent","subscribeTo","evt","$emit"],"mappings":"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"}