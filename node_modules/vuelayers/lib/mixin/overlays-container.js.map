{"version":3,"file":"overlays-container.js","sources":["src/mixin/overlays-container.js"],"sourcesContent":["import Collection from 'ol/Collection'\nimport Overlay from 'ol/Overlay'\nimport Vue from 'vue'\nimport { merge as mergeObs } from 'rxjs/observable'\nimport { getOverlayId, initializeOverlay } from '../ol-ext'\nimport { observableFromOlEvent } from '../rx-ext'\nimport { instanceOf } from '../util/assert'\nimport rxSubs from './rx-subs'\nimport identMap from './ident-map'\n\nexport default {\n  mixins: [identMap, rxSubs],\n  computed: {\n    overlayIds () {\n      if (!this.rev) return []\n\n      return this.getOverlays().map(getOverlayId)\n    },\n    overlaysCollectionIdent () {\n      if (!this.olObjIdent) return\n\n      return this.makeIdent(this.olObjIdent, 'overlays_collection')\n    },\n  },\n  methods: {\n    /**\n     * @param {Overlay|Vue} overlay\n     * @return {void}\n     */\n    addOverlay (overlay) {\n      overlay = overlay instanceof Vue ? overlay.$overlay : overlay\n      instanceOf(overlay, Overlay)\n\n      if (this.getOverlayById(getOverlayId(overlay)) == null) {\n        initializeOverlay(overlay)\n        this.$overlaysCollection.push(overlay)\n      }\n    },\n    /**\n     * @param {Overlay|Vue} overlay\n     * @return {void}\n     */\n    removeOverlay (overlay) {\n      overlay = this.getOverlayById(getOverlayId(overlay))\n      if (!overlay) return\n\n      this.$overlaysCollection.remove(overlay)\n    },\n    /**\n     * @return {Overlay[]}\n     */\n    getOverlays () {\n      return this.$overlaysCollection.getArray()\n    },\n    /**\n     * @return {Collection<Overlay>}\n     */\n    getOverlaysCollection () {\n      return this._overlaysCollection\n    },\n    /**\n     * @param {string|number} overlayId\n     * @return {Overlay|undefined}\n     */\n    getOverlayById (overlayId) {\n      return this.$overlaysCollection.getArray().find(overlay => {\n        return getOverlayId(overlay) === overlayId\n      })\n    },\n    /**\n     * @return {void}\n     */\n    clearOverlays () {\n      this.$overlaysCollection.clear()\n    },\n    /**\n     * @returns {Object}\n     * @protected\n     */\n    getServices () {\n      const vm = this\n\n      return {\n        get overlaysContainer () { return vm },\n      }\n    },\n  },\n  created () {\n    this._overlaysCollection = this.instanceFactoryCall(this.overlaysCollectionIdent, () => new Collection())\n\n    this::defineServices()\n    this::subscribeToCollectionEvents()\n  },\n}\n\nfunction defineServices () {\n  Object.defineProperties(this, {\n    $overlaysCollection: {\n      enumerable: true,\n      get: this.getOverlaysCollection,\n    },\n  })\n}\n\nfunction subscribeToCollectionEvents () {\n  const adds = observableFromOlEvent(this.$overlaysCollection, 'add')\n  const removes = observableFromOlEvent(this.$overlaysCollection, 'remove')\n\n  this.subscribeTo(mergeObs(adds, removes), ({ type, element }) => {\n    ++this.rev\n\n    this.$nextTick(() => {\n      this.$emit(type + ':overlay', element)\n    })\n  })\n}\n"],"names":["mixins","identMap","rxSubs","computed","overlayIds","rev","getOverlays","getOverlayId","overlaysCollectionIdent","olObjIdent","makeIdent","methods","addOverlay","overlay","Vue","$overlay","instanceOf","Overlay","getOverlayById","initializeOverlay","$overlaysCollection","push","removeOverlay","remove","getArray","getOverlaysCollection","_overlaysCollection","overlayId","clearOverlays","clear","getServices","vm","overlaysContainer","created","instanceFactoryCall","Collection","defineServices","subscribeToCollectionEvents","enumerable","get","adds","observableFromOlEvent","removes","subscribeTo","mergeObs","type","element","$nextTick","$emit"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAUA,wBAAe;EACbA,MAAM,EAAE,CAACC,QAAD,EAAWC,MAAX,CADK;EAEbC,QAAQ,EAAE;IACRC,UADQ,wBACM;;;UACR,CAAC,KAAKC,GAAV,EAAe,OAAO,EAAP;aAER,qCAAKC,WAAL,mBAAuBC,YAAvB,CAAP;KAJM;IAMRC,uBANQ,qCAMmB;UACrB,CAAC,KAAKC,UAAV,EAAsB;aAEf,KAAKC,SAAL,CAAe,KAAKD,UAApB,EAAgC,qBAAhC,CAAP;;GAXS;EAcbE,OAAO,EAAE;;;;;IAKPC,UALO,sBAKKC,OALL,EAKc;MACnBA,OAAO,GAAGA,OAAO,YAAYC,GAAnB,GAAyBD,OAAO,CAACE,QAAjC,GAA4CF,OAAtD;MACAG,UAAU,CAACH,OAAD,EAAUI,OAAV,CAAV;;UAEI,KAAKC,cAAL,CAAoBX,YAAY,CAACM,OAAD,CAAhC,KAA8C,IAAlD,EAAwD;QACtDM,iBAAiB,CAACN,OAAD,CAAjB;aACKO,mBAAL,CAAyBC,IAAzB,CAA8BR,OAA9B;;KAXG;;;;;;IAkBPS,aAlBO,yBAkBQT,OAlBR,EAkBiB;MACtBA,OAAO,GAAG,KAAKK,cAAL,CAAoBX,YAAY,CAACM,OAAD,CAAhC,CAAV;UACI,CAACA,OAAL,EAAc;WAETO,mBAAL,CAAyBG,MAAzB,CAAgCV,OAAhC;KAtBK;;;;;IA2BPP,WA3BO,yBA2BQ;aACN,KAAKc,mBAAL,CAAyBI,QAAzB,EAAP;KA5BK;;;;;IAiCPC,qBAjCO,mCAiCkB;aAChB,KAAKC,mBAAZ;KAlCK;;;;;;IAwCPR,cAxCO,0BAwCSS,SAxCT,EAwCoB;;;aAClB,uCAAKP,mBAAL,CAAyBI,QAAzB,oBAAyC,UAAAX,OAAO,EAAI;eAClDN,YAAY,CAACM,OAAD,CAAZ,KAA0Bc,SAAjC;OADK,CAAP;KAzCK;;;;;IAgDPC,aAhDO,2BAgDU;WACVR,mBAAL,CAAyBS,KAAzB;KAjDK;;;;;;IAuDPC,WAvDO,yBAuDQ;UACPC,EAAE,GAAG,IAAX;aAEO;YACDC,iBAAJ,GAAyB;iBAASD,EAAP;;;OAD7B;;GAxES;EA6EbE,OA7Ea,qBA6EF;SACJP,mBAAL,GAA2B,KAAKQ,mBAAL,CAAyB,KAAK1B,uBAA9B,EAAuD;aAAM,IAAI2B,UAAJ,EAAN;KAAvD,CAA3B;IAEMC,cAAN;IACMC,2BAAN;;CAjFJ;;AAqFA,SAASD,cAAT,GAA2B;2BACD,IAAxB,EAA8B;IAC5BhB,mBAAmB,EAAE;MACnBkB,UAAU,EAAE,IADO;MAEnBC,GAAG,EAAE,KAAKd;;GAHd;;;AAQF,SAASY,2BAAT,GAAwC;;;MAChCG,IAAI,GAAGC,qBAAqB,CAAC,KAAKrB,mBAAN,EAA2B,KAA3B,CAAlC;MACMsB,OAAO,GAAGD,qBAAqB,CAAC,KAAKrB,mBAAN,EAA2B,QAA3B,CAArC;OAEKuB,WAAL,CAAiBC,KAAQ,CAACJ,IAAD,EAAOE,OAAP,CAAzB,EAA0C,gBAAuB;QAApBG,IAAoB,QAApBA,IAAoB;QAAdC,OAAc,QAAdA,OAAc;MAC7D,KAAI,CAACzC,GAAP;;IAEA,KAAI,CAAC0C,SAAL,CAAe,YAAM;MACnB,KAAI,CAACC,KAAL,CAAWH,IAAI,GAAG,UAAlB,EAA8BC,OAA9B;KADF;GAHF;;;;;"}