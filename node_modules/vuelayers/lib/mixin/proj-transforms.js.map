{"version":3,"file":"proj-transforms.js","sources":["src/mixin/proj-transforms.js"],"sourcesContent":["import {\n  EPSG_3857,\n  getMapDataProjection,\n  readGeoJsonFeature,\n  readGeoJsonGeometry,\n  transformExtent,\n  transformLine,\n  transformMultiLine,\n  transformMultiPoint,\n  transformMultiPolygon,\n  transformPoint,\n  transformPolygon,\n  writeGeoJsonFeature,\n  writeGeoJsonGeometry,\n} from '../ol-ext'\nimport { coalesce } from '../util/minilo'\n\n/**\n * Mixin with helpers for projection transforms between current view projection and global defined projection.\n */\nexport default {\n  computed: {\n    /**\n     * @return {module:ol/proj~ProjectionLike}\n     */\n    viewProjection () {\n      if (this.rev && this.$view) {\n        return this.$view.getProjection().getCode()\n      }\n      return this.projection || EPSG_3857\n    },\n    /**\n     * @return {module:ol/proj~ProjectionLike}\n     */\n    resolvedDataProjection () {\n      return coalesce(\n        this.dataProjection, // may or may not be present\n        this.projection, // may or may not be present\n        this.$map && getMapDataProjection(this.$map),\n        this.$options.dataProjection,\n        this.viewProjection,\n      )\n    },\n  },\n  methods: {\n    pointToViewProj (point) {\n      return transformPoint(point, this.resolvedDataProjection, this.viewProjection)\n    },\n    pointToDataProj (point) {\n      return transformPoint(point, this.viewProjection, this.resolvedDataProjection)\n    },\n    lineToViewProj (line) {\n      return transformLine(line, this.resolvedDataProjection, this.viewProjection)\n    },\n    lineToDataProj (line) {\n      return transformLine(line, this.viewProjection, this.resolvedDataProjection)\n    },\n    polygonToViewProj (polygon) {\n      return transformPolygon(polygon, this.resolvedDataProjection, this.viewProjection)\n    },\n    polygonToDataProj (polygon) {\n      return transformPolygon(polygon, this.viewProjection, this.resolvedDataProjection)\n    },\n    multiPointToViewProj (multiPoint) {\n      return transformMultiPoint(multiPoint, this.resolvedDataProjection, this.viewProjection)\n    },\n    multiPointToDataProj (multiPoint) {\n      return transformMultiPoint(multiPoint, this.viewProjection, this.resolvedDataProjection)\n    },\n    multiLineToViewProj (multiLine) {\n      return transformMultiLine(multiLine, this.resolvedDataProjection, this.viewProjection)\n    },\n    multiLineToDataProj (multiLine) {\n      return transformMultiLine(multiLine, this.viewProjection, this.resolvedDataProjection)\n    },\n    multiPolygonToViewProj (multiPolygon) {\n      return transformMultiPolygon(multiPolygon, this.resolvedDataProjection, this.viewProjection)\n    },\n    multiPolygonToDataProj (multiPolygon) {\n      return transformMultiPolygon(multiPolygon, this.viewProjection, this.resolvedDataProjection)\n    },\n\n    extentToViewProj (extent) {\n      return transformExtent(extent, this.resolvedDataProjection, this.viewProjection)\n    },\n    extentToDataProj (extent) {\n      return transformExtent(extent, this.viewProjection, this.resolvedDataProjection)\n    },\n\n    writeGeometryInDataProj (geometry) {\n      return writeGeoJsonGeometry(geometry, this.viewProjection, this.resolvedDataProjection)\n    },\n    writeGeometryInViewProj (geometry) {\n      return writeGeoJsonGeometry(geometry)\n    },\n    readGeometryInDataProj (geometry) {\n      return readGeoJsonGeometry(geometry, this.viewProjection, this.resolvedDataProjection)\n    },\n\n    writeFeatureInDataProj (feature) {\n      return writeGeoJsonFeature(feature, this.viewProjection, this.resolvedDataProjection)\n    },\n    writeFeatureInViewProj (feature) {\n      return writeGeoJsonFeature(feature)\n    },\n    readFeatureInDataProj (feature) {\n      return readGeoJsonFeature(feature, this.viewProjection, this.resolvedDataProjection)\n    },\n  },\n}\n"],"names":["computed","viewProjection","rev","$view","getProjection","getCode","projection","EPSG_3857","resolvedDataProjection","coalesce","dataProjection","$map","getMapDataProjection","$options","methods","pointToViewProj","point","transformPoint","pointToDataProj","lineToViewProj","line","transformLine","lineToDataProj","polygonToViewProj","polygon","transformPolygon","polygonToDataProj","multiPointToViewProj","multiPoint","transformMultiPoint","multiPointToDataProj","multiLineToViewProj","multiLine","transformMultiLine","multiLineToDataProj","multiPolygonToViewProj","multiPolygon","transformMultiPolygon","multiPolygonToDataProj","extentToViewProj","extent","transformExtent","extentToDataProj","writeGeometryInDataProj","geometry","writeGeoJsonGeometry","writeGeometryInViewProj","readGeometryInDataProj","readGeoJsonGeometry","writeFeatureInDataProj","feature","writeGeoJsonFeature","writeFeatureInViewProj","readFeatureInDataProj","readGeoJsonFeature"],"mappings":"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"}