/**
 * VueLayers
 * Web map Vue components with the power of OpenLayers
 *
 * @package vuelayers
 * @author Vladimir Vershinin <ghettovoice@gmail.com>
 * @version 0.11.24
 * @license MIT
 * @copyright (c) 2017-2020, Vladimir Vershinin <ghettovoice@gmail.com>
 */
import _mapInstanceProperty from '@babel/runtime-corejs3/core-js-stable/instance/map';
import _Object$defineProperties from '@babel/runtime-corejs3/core-js-stable/object/define-properties';
import _Promise from '@babel/runtime-corejs3/core-js-stable/promise';
import _regeneratorRuntime from '@babel/runtime-corejs3/regenerator';
import _asyncToGenerator from '@babel/runtime-corejs3/helpers/esm/asyncToGenerator';
import { first } from 'rxjs/_esm5/internal/operators/first';
import { getStyleId, initializeStyle, setStyleId } from '../ol-ext';
import { observableFromOlEvent } from '../rx-ext';
import mergeDescriptors from '../util/multi-merge-descriptors';
import cmp from './ol-virt-cmp';
import useMapCmp from './use-map-cmp';

/**
 * Basic style mixin.
 */

var style = {
  mixins: [cmp, useMapCmp],
  methods: {
    /**
     * @return {OlStyle|Promise<OlStyle>}
     * @protected
     */
    createOlObject: function createOlObject() {
      var _this = this;

      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {
        var style;
        return _regeneratorRuntime.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _this.createStyle();

              case 2:
                style = _context.sent;
                initializeStyle(style);
                return _context.abrupt("return", style);

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }))();
    },

    /**
     * @return {OlStyle|Promise<OlStyle>}
     * @protected
     * @abstract
     */
    createStyle: function createStyle() {
      throw new Error('Not implemented method');
    },

    /**
     * @return {Promise}
     * @protected
     */
    init: function init() {
      return cmp.methods.init.call(this);
    },

    /**
     * @return {void|Promise<void>}
     * @protected
     */
    deinit: function deinit() {
      return cmp.methods.deinit.call(this);
    },

    /**
     * @return {Object}
     * @protected
     */
    getServices: function getServices() {
      var vm = this;
      return mergeDescriptors(cmp.methods.getServices.call(this), {
        get style() {
          return vm.$style;
        }

      });
    },

    /**
     * @return {Promise}
     */
    refresh: function refresh() {
      var _this2 = this;

      if (this.$olObject == null) return _Promise.resolve();
      return this.remount().then(function () {
        if (!_this2.$map) {
          return;
        }

        _this2.$map.render();

        return observableFromOlEvent(_this2.$map, 'postcompose').pipe(first()).toPromise();
      });
    }
  },
  stubVNode: {
    empty: function empty() {
      return this.vmId;
    }
  },
  created: function created() {
    defineServices.call(this);
  },
  watch: {
    id: function id(value) {
      if (!this.$style || value === getStyleId(this.$style)) {
        return;
      }

      setStyleId(this.$style, value);
    }
  }
};

function defineServices() {
  var _this3 = this;

  _Object$defineProperties(this, {
    $style: {
      enumerable: true,
      get: function get() {
        return _this3.$olObject;
      }
    },
    $map: {
      enumerable: true,
      get: function get() {
        return _this3.$services && _mapInstanceProperty(_this3.$services);
      }
    },
    $view: {
      enumerable: true,
      get: function get() {
        return _this3.$services && _this3.$services.view;
      }
    },
    $stylesContainer: {
      enumerable: true,
      get: function get() {
        return _this3.$services && _this3.$services.stylesContainer;
      }
    }
  });
}

export default style;
