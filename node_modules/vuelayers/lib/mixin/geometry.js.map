{"version":3,"file":"geometry.js","sources":["src/mixin/geometry.js"],"sourcesContent":["import { distinctUntilChanged, map as mapObs, throttleTime } from 'rxjs/operators'\nimport {\n  boundingExtent,\n  findPointOnSurface,\n  getGeometryId,\n  initializeGeometry,\n  setGeometryId,\n  transforms,\n} from '../ol-ext'\nimport { observableFromOlEvent } from '../rx-ext'\nimport { hasGeometry } from '../util/assert'\nimport { isEqual } from '../util/minilo'\nimport mergeDescriptors from '../util/multi-merge-descriptors'\nimport cmp from './ol-virt-cmp'\nimport projTransforms from './proj-transforms'\nimport useMapCmp from './use-map-cmp'\n\nexport default {\n  mixins: [cmp, useMapCmp, projTransforms],\n  props: {\n    /**\n     * Coordinates in the map view projection.\n     * @type {number[]}\n     */\n    coordinates: {\n      type: Array,\n      required: true,\n      validator: val => val.length,\n    },\n  },\n  computed: {\n    /**\n     * @type {string}\n     * @abstract\n     * @readonly\n     */\n    type () {\n      throw new Error('Not implemented computed property')\n    },\n    /**\n     * @type {number[]|undefined}\n     */\n    extent () {\n      if (this.extentViewProj && this.resolvedDataProjection) {\n        return this.extentToDataProj(this.extentViewProj)\n      }\n    },\n    /**\n     * @type {number[]|undefined}\n     */\n    extentViewProj () {\n      if (this.rev && this.$geometry) {\n        return this.$geometry.getExtent()\n      }\n    },\n    /**\n     * @type {number[]|undefined}\n     */\n    point () {\n      if (this.pointViewProj && this.resolvedDataProjection) {\n        return this.pointToDataProj(this.pointViewProj)\n      }\n    },\n    /**\n     * @type {number[]}\n     */\n    pointViewProj () {\n      if (this.rev && this.$geometry) {\n        return findPointOnSurface(this.$geometry)\n      }\n    },\n    /**\n     * @type {number[]|undefined}\n     */\n    coordinatesViewProj () {\n      if (this.rev && this.$geometry) {\n        return this.$geometry.getCoordinates()\n      }\n    },\n  },\n  methods: {\n    /**\n     * @return {module:ol/geom/Geometry~Geometry|Promise<module:ol/geom/Geometry~Geometry>}\n     * @protected\n     */\n    async createOlObject () {\n      const geometry = await this.createGeometry()\n\n      initializeGeometry(geometry, this.id)\n\n      return geometry\n    },\n    /**\n     * @return {module:ol/geom/Geometry~Geometry|Promise<module:ol/geom/Geometry~Geometry>}\n     * @protected\n     * @abstract\n     */\n    createGeometry () {\n      throw new Error('Not implemented method')\n    },\n    /**\n     * @return {number[]}\n     */\n    getCoordinates () {\n      hasGeometry(this)\n\n      return this.toDataProj(this.$geometry.getCoordinates())\n    },\n    /**\n     * @param {number[]} coordinates\n     */\n    setCoordinates (coordinates) {\n      hasGeometry(this)\n\n      this.$geometry.setCoordinates(this.toViewProj(coordinates))\n    },\n    /**\n     * @return {Promise}\n     * @throws {AssertionError}\n     * @protected\n     */\n    init () {\n      this.setupTransformFunctions()\n\n      return this::cmp.methods.init()\n    },\n    /**\n     * @protected\n     */\n    setupTransformFunctions () {\n      // define helper methods based on geometry type\n      const { transform } = transforms[this.type]\n      /**\n       * @method\n       * @param {number[]} coordinates\n       * @return {number[]}\n       * @protected\n       */\n      this.toDataProj = coordinates => transform(coordinates, this.viewProjection, this.resolvedDataProjection)\n      /**\n       * @method\n       * @param {number[]} coordinates\n       * @return {number[]}\n       * @protected\n       */\n      this.toViewProj = coordinates => transform(coordinates, this.resolvedDataProjection, this.viewProjection)\n    },\n    /**\n     * @return {void|Promise}\n     * @protected\n     */\n    deinit () {\n      return this::cmp.methods.deinit()\n    },\n    /**\n     * @return {Promise}\n     */\n    refresh () {\n      return this::cmp.methods.refresh()\n    },\n    /**\n     * @return {Object}\n     * @protected\n     */\n    getServices () {\n      const vm = this\n\n      return mergeDescriptors(this::cmp.methods.getServices(), {\n        get geometry () { return vm.$geometry },\n      })\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    mount () {\n      this.$geometryContainer && this.$geometryContainer.setGeometry(this)\n      this.subscribeAll()\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    unmount () {\n      this.unsubscribeAll()\n      this.$geometryContainer && this.$geometryContainer.setGeometry(undefined)\n    },\n    /**\n     * @return {void}\n     * @protected\n     */\n    subscribeAll () {\n      this::subscribeToGeomChanges()\n    },\n  },\n  watch: {\n    id (value) {\n      if (!this.$geometry || value === getGeometryId(this.$geometry)) {\n        return\n      }\n\n      setGeometryId(this.$geometry, value)\n    },\n    coordinates (value) {\n      if (!this.$geometry || !this.$view) return\n\n      // compares in data projection\n      let isEq = isEqualGeom({\n        coordinates: value,\n        extent: boundingExtent(value),\n      }, {\n        coordinates: this.getCoordinates(),\n        extent: this.extent,\n      })\n\n      if (isEq) return\n\n      this.setCoordinates(value)\n    },\n    resolvedDataProjection () {\n      if (!this.$geometry) return\n\n      this.setupTransformFunctions()\n      this.setCoordinates(this.coordinates)\n    },\n  },\n  stubVNode: {\n    empty () {\n      return this.vmId\n    },\n  },\n  created () {\n    this::defineServices()\n  },\n}\n\nfunction defineServices () {\n  Object.defineProperties(this, {\n    /**\n     * @type {module:ol/geom/Geometry~Geometry|undefined}\n     */\n    $geometry: {\n      enumerable: true,\n      get: () => this.$olObject,\n    },\n    /**\n     * @type {module:ol/PluggableMap~PluggableMap|undefined}\n     */\n    $map: {\n      enumerable: true,\n      get: () => this.$services && this.$services.map,\n    },\n    /**\n     * @type {module:ol/View~View|undefined}\n     */\n    $view: {\n      enumerable: true,\n      get: () => this.$services && this.$services.view,\n    },\n    /**\n     * @type {Object|undefined}\n     */\n    $geometryContainer: {\n      enumerable: true,\n      get: () => this.$services && this.$services.geometryContainer,\n    },\n  })\n}\n\n/**\n * @return {void}\n * @private\n */\nfunction subscribeToGeomChanges () {\n  hasGeometry(this)\n\n  const ft = 1000 / 60\n  const changes = observableFromOlEvent(\n    this.$geometry,\n    'change',\n    () => ({\n      coordinates: this.getCoordinates(),\n      extent: this.extent,\n    }),\n  ).pipe(\n    throttleTime(ft),\n    distinctUntilChanged(isEqualGeom),\n    mapObs(({ coordinates }) => ({\n      prop: 'coordinates',\n      value: coordinates,\n    })),\n  )\n\n  this.subscribeTo(changes, ({ prop, value }) => {\n    ++this.rev\n\n    this.$nextTick(() => {\n      this.$emit(`update:${prop}`, value)\n    })\n  })\n}\n\n/**\n * @param {{coordinates: number[], extent: number[]}} a\n * @param {{coordinates: number[], extent: number[]}} b\n * @returns {boolean}\n */\nfunction isEqualGeom (a, b) {\n  return isEqual(a.extent, b.extent)\n    ? isEqual(a.coordinates, b.coordinates)\n    : false\n}\n"],"names":["mixins","cmp","useMapCmp","projTransforms","props","coordinates","type","Array","required","validator","val","length","computed","Error","extent","extentViewProj","resolvedDataProjection","extentToDataProj","rev","$geometry","getExtent","point","pointViewProj","pointToDataProj","findPointOnSurface","coordinatesViewProj","getCoordinates","methods","createOlObject","createGeometry","geometry","initializeGeometry","id","hasGeometry","toDataProj","setCoordinates","toViewProj","init","setupTransformFunctions","transform","transforms","viewProjection","deinit","refresh","getServices","vm","mergeDescriptors","mount","$geometryContainer","setGeometry","subscribeAll","unmount","unsubscribeAll","undefined","subscribeToGeomChanges","watch","value","getGeometryId","setGeometryId","$view","isEq","isEqualGeom","boundingExtent","stubVNode","empty","vmId","created","defineServices","enumerable","get","$olObject","$map","$services","view","geometryContainer","ft","changes","observableFromOlEvent","pipe","throttleTime","distinctUntilChanged","mapObs","prop","subscribeTo","$nextTick","$emit","a","b","isEqual"],"mappings":"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"}