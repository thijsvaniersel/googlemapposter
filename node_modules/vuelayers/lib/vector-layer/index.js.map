{"version":3,"file":"index.js","sources":["src/component/vector-layer/layer.vue?rollup-plugin-vue=script.js","src/component/vector-layer/layer.vue","src/component/vector-layer/index.js"],"sourcesContent":["\nimport VectorLayer from 'ol/layer/Vector'\nimport { vectorLayer } from '../../mixin'\n\nconst RENDER_MODES = ['vector', 'image']\n\n/**\n * @vueProps\n */\nconst props = {\n  /**\n   * Render mode for vector layers. Available values:\n   * - `image` - vector layers are rendered as images\n   * - `vector` - vector layers are rendered as vectors\n   * @type {string}\n   * @default vector\n   */\n  renderMode: {\n    type: String,\n    default: 'vector',\n    validator: val => RENDER_MODES.includes(val),\n  },\n}\n\n/**\n * @vueMethods\n */\nconst methods = {\n  /**\n   * @return {Vector}\n   * @protected\n   */\n  createLayer () {\n    return new VectorLayer({\n      id: this.id,\n      minResolution: this.minResolution,\n      maxResolution: this.maxResolution,\n      opacity: this.opacity,\n      visible: this.visible,\n      extent: this.extent,\n      zIndex: this.zIndex,\n      updateWhileAnimating: this.updateWhileAnimating,\n      updateWhileInteracting: this.updateWhileInteracting,\n      source: this._source,\n      renderMode: this.renderMode,\n      renderBuffer: this.renderBuffer,\n      renderOrder: this.renderOrder,\n      declutter: this.declutter,\n    })\n  },\n}\n\n/**\n * Layer for data that is rendered client-side.\n *\n * @vueProto\n * @title vl-layer-vector\n * @alias module:vector-layer/layer\n *\n * @vueSlot default Default slot for `vl-source-*` (vector-like only) components.\n */\nexport default {\n  name: 'vl-layer-vector',\n  mixins: [vectorLayer],\n  props,\n  methods,\n}\n","<script>\n  import VectorLayer from 'ol/layer/Vector'\n  import { vectorLayer } from '../../mixin'\n\n  const RENDER_MODES = ['vector', 'image']\n\n  /**\n   * @vueProps\n   */\n  const props = {\n    /**\n     * Render mode for vector layers. Available values:\n     * - `image` - vector layers are rendered as images\n     * - `vector` - vector layers are rendered as vectors\n     * @type {string}\n     * @default vector\n     */\n    renderMode: {\n      type: String,\n      default: 'vector',\n      validator: val => RENDER_MODES.includes(val),\n    },\n  }\n\n  /**\n   * @vueMethods\n   */\n  const methods = {\n    /**\n     * @return {Vector}\n     * @protected\n     */\n    createLayer () {\n      return new VectorLayer({\n        id: this.id,\n        minResolution: this.minResolution,\n        maxResolution: this.maxResolution,\n        opacity: this.opacity,\n        visible: this.visible,\n        extent: this.extent,\n        zIndex: this.zIndex,\n        updateWhileAnimating: this.updateWhileAnimating,\n        updateWhileInteracting: this.updateWhileInteracting,\n        source: this._source,\n        renderMode: this.renderMode,\n        renderBuffer: this.renderBuffer,\n        renderOrder: this.renderOrder,\n        declutter: this.declutter,\n      })\n    },\n  }\n\n  /**\n   * Layer for data that is rendered client-side.\n   *\n   * @vueProto\n   * @title vl-layer-vector\n   * @alias module:vector-layer/layer\n   *\n   * @vueSlot default Default slot for `vl-source-*` (vector-like only) components.\n   */\n  export default {\n    name: 'vl-layer-vector',\n    mixins: [vectorLayer],\n    props,\n    methods,\n  }\n</script>\n","import { pick } from '../../util/minilo'\nimport Layer from './layer.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Layer, options)\n\n  Vue.component(Layer.name, Layer)\n}\n\nexport default plugin\n\nexport {\n  Layer,\n  plugin as install,\n}\n"],"names":["RENDER_MODES","props","renderMode","type","String","default","validator","val","methods","createLayer","VectorLayer","id","minResolution","maxResolution","opacity","visible","extent","zIndex","updateWhileAnimating","updateWhileInteracting","source","_source","renderBuffer","renderOrder","declutter","name","mixins","vectorLayer","plugin","Vue","options","installed","pick","Layer","component"],"mappings":";;;;;;;;;;;;;;;;;AAIA,IAAMA,YAAY,GAAG,CAAC,QAAD,EAAW,OAAX,CAArB;;;;;AAKA,IAAMC,KAAK,GAAG;;;;;;;;EAQZC,UAAU,EAAE;IACVC,IAAI,EAAEC,MADI;IAEVC,OAAO,EAAE,QAFC;IAGVC,SAAS,EAAE,mBAAAC,GAAG;aAAI,0BAAAP,YAAY,MAAZ,CAAAA,YAAY,EAAUO,GAAV,CAAhB;;;CAXlB;;;;;AAkBA,IAAMC,OAAO,GAAG;;;;;EAKdC,WALc,yBAKC;WACN,IAAIC,WAAJ,CAAgB;MACrBC,EAAE,EAAE,KAAKA,EADY;MAErBC,aAAa,EAAE,KAAKA,aAFC;MAGrBC,aAAa,EAAE,KAAKA,aAHC;MAIrBC,OAAO,EAAE,KAAKA,OAJO;MAKrBC,OAAO,EAAE,KAAKA,OALO;MAMrBC,MAAM,EAAE,KAAKA,MANQ;MAOrBC,MAAM,EAAE,KAAKA,MAPQ;MAQrBC,oBAAoB,EAAE,KAAKA,oBARN;MASrBC,sBAAsB,EAAE,KAAKA,sBATR;MAUrBC,MAAM,EAAE,KAAKC,OAVQ;MAWrBnB,UAAU,EAAE,KAAKA,UAXI;MAYrBoB,YAAY,EAAE,KAAKA,YAZE;MAarBC,WAAW,EAAE,KAAKA,WAbG;MAcrBC,SAAS,EAAE,KAAKA;KAdX,CAAP;;CANJ;;;;;;;;;;;AAkCA,aAAe;EACbC,IAAI,EAAE,iBADO;EAEbC,MAAM,EAAE,CAACC,WAAD,CAFK;EAGb1B,KAAK,EAALA,KAHa;EAIbO,OAAO,EAAPA;CAJF;;AC1DY,2BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAZ,SAASoB,MAAT,CAAiBC,GAAjB,EAAoC;MAAdC,OAAc,uEAAJ,EAAI;;MAC9BF,MAAM,CAACG,SAAX,EAAsB;;;;EAGtBH,MAAM,CAACG,SAAP,GAAmB,IAAnB;EAEAD,OAAO,GAAGE,IAAI,CAACF,OAAD,EAAU,gBAAV,CAAd;;iBACcG,KAAd,EAAqBH,OAArB;;EAEAD,GAAG,CAACK,SAAJ,CAAcD,KAAK,CAACR,IAApB,EAA0BQ,KAA1B;;;;;;"}