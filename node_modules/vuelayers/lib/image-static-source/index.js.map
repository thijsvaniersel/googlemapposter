{"version":3,"file":"index.js","sources":["src/component/image-static-source/source.vue?rollup-plugin-vue=script.js","src/component/image-static-source/source.vue","src/component/image-static-source/index.js"],"sourcesContent":["\nimport ImageStaticSource from 'ol/source/ImageStatic'\nimport { imageSource, withUrl } from '../../mixin'\nimport { makeWatchers } from '../../util/vue-helpers'\n\n/**\n * @vueProps\n */\nconst props = /** @lends module:image-static-source/source# */{\n  /**\n   * Image extent in the source projection.\n   * @type {number[]}\n   */\n  extent: {\n    type: Array,\n    required: true,\n    validator: value => value.length === 4,\n  },\n  /**\n   * Optional function to load an image given a URL.\n   * @type {function|undefined}\n   */\n  loadFunc: Function,\n  /**\n   * Image size in pixels.\n   * @type {number[]}\n   */\n  size: {\n    type: Array,\n    validator: value => value.length === 2,\n  },\n  /**\n   * Image URL.\n   * @type {string}\n   */\n  url: {\n    type: String,\n    required: true,\n    validator: value => !!value.length,\n  },\n}\n\n/**\n * @vueMethods\n */\nconst methods = /** @lends module:image-static-source/source# */{\n  /**\n   * @return {ImageStatic}\n   * @protected\n   */\n  createSource () {\n    return new ImageStaticSource({\n      attributions: this.attributions,\n      crossOrigin: this.crossOrigin,\n      imageExtent: this.extent,\n      imageLoadFunction: this.loadFunc,\n      logo: this.logo,\n      projection: this.projection,\n      imageSize: this.size,\n      url: this.urlTmpl,\n    })\n  },\n}\n\nconst watch = makeWatchers(Object.keys(props), () => function () {\n  this.scheduleRecreate()\n})\n\n/**\n * A layer source for displaying a single, static image.\n *\n * @vueProto\n * @title vl-source-image-static\n * @alias module:image-static-source/source\n */\nexport default {\n  name: 'vl-source-image-static',\n  mixins: [imageSource, withUrl],\n  props,\n  methods,\n  watch,\n}\n","<script>\n  import ImageStaticSource from 'ol/source/ImageStatic'\n  import { imageSource, withUrl } from '../../mixin'\n  import { makeWatchers } from '../../util/vue-helpers'\n\n  /**\n   * @vueProps\n   */\n  const props = /** @lends module:image-static-source/source# */{\n    /**\n     * Image extent in the source projection.\n     * @type {number[]}\n     */\n    extent: {\n      type: Array,\n      required: true,\n      validator: value => value.length === 4,\n    },\n    /**\n     * Optional function to load an image given a URL.\n     * @type {function|undefined}\n     */\n    loadFunc: Function,\n    /**\n     * Image size in pixels.\n     * @type {number[]}\n     */\n    size: {\n      type: Array,\n      validator: value => value.length === 2,\n    },\n    /**\n     * Image URL.\n     * @type {string}\n     */\n    url: {\n      type: String,\n      required: true,\n      validator: value => !!value.length,\n    },\n  }\n\n  /**\n   * @vueMethods\n   */\n  const methods = /** @lends module:image-static-source/source# */{\n    /**\n     * @return {ImageStatic}\n     * @protected\n     */\n    createSource () {\n      return new ImageStaticSource({\n        attributions: this.attributions,\n        crossOrigin: this.crossOrigin,\n        imageExtent: this.extent,\n        imageLoadFunction: this.loadFunc,\n        logo: this.logo,\n        projection: this.projection,\n        imageSize: this.size,\n        url: this.urlTmpl,\n      })\n    },\n  }\n\n  const watch = makeWatchers(Object.keys(props), () => function () {\n    this.scheduleRecreate()\n  })\n\n  /**\n   * A layer source for displaying a single, static image.\n   *\n   * @vueProto\n   * @title vl-source-image-static\n   * @alias module:image-static-source/source\n   */\n  export default {\n    name: 'vl-source-image-static',\n    mixins: [imageSource, withUrl],\n    props,\n    methods,\n    watch,\n  }\n</script>\n","import { pick } from '../../util/minilo'\nimport Source from './source.vue'\n\nfunction plugin (Vue, options = {}) {\n  if (plugin.installed) {\n    return\n  }\n  plugin.installed = true\n\n  options = pick(options, 'dataProjection')\n  Object.assign(Source, options)\n\n  Vue.component(Source.name, Source)\n}\n\nexport default plugin\n\nexport {\n  Source,\n  plugin as install,\n}\n"],"names":["props","extent","type","Array","required","validator","value","length","loadFunc","Function","size","url","String","methods","createSource","ImageStaticSource","attributions","crossOrigin","imageExtent","imageLoadFunction","logo","projection","imageSize","urlTmpl","watch","makeWatchers","scheduleRecreate","name","mixins","imageSource","withUrl","plugin","Vue","options","installed","pick","Source","component"],"mappings":";;;;;;;;;;;;;;;;;;AAKA;;;;AAGA,IAAMA,KAAK;;AAAmD;;;;;EAK5DC,MAAM,EAAE;IACNC,IAAI,EAAEC,KADA;IAENC,QAAQ,EAAE,IAFJ;IAGNC,SAAS,EAAE,mBAAAC,KAAK;aAAIA,KAAK,CAACC,MAAN,KAAiB,CAArB;;GAR0C;;;;;;EAc5DC,QAAQ,EAAEC,QAdkD;;;;;;EAmB5DC,IAAI,EAAE;IACJR,IAAI,EAAEC,KADF;IAEJE,SAAS,EAAE,mBAAAC,KAAK;aAAIA,KAAK,CAACC,MAAN,KAAiB,CAArB;;GArB0C;;;;;;EA2B5DI,GAAG,EAAE;IACHT,IAAI,EAAEU,MADH;IAEHR,QAAQ,EAAE,IAFP;IAGHC,SAAS,EAAE,mBAAAC,KAAK;aAAI,CAAC,CAACA,KAAK,CAACC,MAAZ;;;CA9BpB;;;;;AAqCA,IAAMM,OAAO;;AAAmD;;;;;EAK9DC,YAL8D,0BAK9C;WACP,IAAIC,iBAAJ,CAAsB;MAC3BC,YAAY,EAAE,KAAKA,YADQ;MAE3BC,WAAW,EAAE,KAAKA,WAFS;MAG3BC,WAAW,EAAE,KAAKjB,MAHS;MAI3BkB,iBAAiB,EAAE,KAAKX,QAJG;MAK3BY,IAAI,EAAE,KAAKA,IALgB;MAM3BC,UAAU,EAAE,KAAKA,UANU;MAO3BC,SAAS,EAAE,KAAKZ,IAPW;MAQ3BC,GAAG,EAAE,KAAKY;KARL,CAAP;;CANJ;AAmBA,IAAMC,KAAK,GAAGC,YAAY,CAAC,aAAYzB,KAAZ,CAAD,EAAqB;SAAM,YAAY;SAC1D0B,gBAAL;GAD6C;CAArB,CAA1B;;;;;;;;;AAWA,aAAe;EACbC,IAAI,EAAE,wBADO;EAEbC,MAAM,EAAE,CAACC,WAAD,EAAcC,OAAd,CAFK;EAGb9B,KAAK,EAALA,KAHa;EAIba,OAAO,EAAPA,OAJa;EAKbW,KAAK,EAALA;CALF;;ACxEY,2BAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAZ,SAASO,MAAT,CAAiBC,GAAjB,EAAoC;MAAdC,OAAc,uEAAJ,EAAI;;MAC9BF,MAAM,CAACG,SAAX,EAAsB;;;;EAGtBH,MAAM,CAACG,SAAP,GAAmB,IAAnB;EAEAD,OAAO,GAAGE,IAAI,CAACF,OAAD,EAAU,gBAAV,CAAd;;iBACcG,MAAd,EAAsBH,OAAtB;;EAEAD,GAAG,CAACK,SAAJ,CAAcD,MAAM,CAACT,IAArB,EAA2BS,MAA3B;;;;;;"}