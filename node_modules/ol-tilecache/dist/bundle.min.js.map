{"version":3,"file":"bundle.min.js","sources":["../src/util.js","../src/tile-range.js","../src/tile-url-function.js","../src/index.js"],"sourcesContent":["/**\n * This file is part of ol-tilecache package.\n * @module ol-tilecache\n * @license MIT\n * @author Vladimir Vershinin\n */\n\n/**\n * Left zero pad.\n *\n * @param {string | number} num\n * @param {number} places\n * @returns {string}\n */\nexport function zeroPad (num, places) {\n  const zero = places - num.toString().length + 1\n\n  return (new Array(parseInt(zero > 0 && zero, 10)).join(\"0\") + num)\n    .toString()\n    .slice(-places)\n}\n\n/**\n * The % operator in JavaScript returns the remainder of a / b, but differs from\n * some other languages in that the result will have the same sign as the\n * dividend. For example, -1 % 8 == -1, whereas in some other languages\n * (such as Python) the result would be 7. This function emulates the more\n * correct modulo behavior, which is useful for certain applications such as\n * calculating an offset index in a circular list.\n *\n * @param {number} a The dividend.\n * @param {number} b The divisor.\n * @return {number} a % b where the result is between 0 and b (either 0 <= x < b\n *     or b < x <= 0, depending on the sign of b).\n * @link https://closure-library.googlecode.com/git-history/docs/local_closure_goog_math_math.js.source.html#line73\n */\nexport function modulo (a, b) {\n  const m = a % b\n\n  return (m * b) < 0 ? m + b : m\n}\n\n/**\n * @param {*} value\n * @param {string} [message]\n * @throws {Error} Throws on false value\n */\nexport function assert (value, message = 'Assertion failed') {\n  if (!value) {\n    throw new Error(message)\n  }\n}\n\nexport function isArray (value) {\n  return Object.prototype.toString.call(value) === '[object Array]'\n}\n","/**\n * This file is part of ol-tilecache package.\n * @module ol-tilecache\n * @license MIT\n * @author Vladimir Vershinin\n */\nimport { isArray } from './util'\n/**\n * @param {TileGrid} tileGrid\n * @param {number[]} extent\n * @param {number} z\n * @return {{minX, minY, maxX, maxY}}\n */\nexport function calculateTileRangeForZ (tileGrid, extent, z) {\n  const resolution = tileGrid.getResolution(z)\n  const [ minX, minY ] = getTileCoordForXYAndResolution(tileGrid, extent[ 0 ], extent[ 1 ], resolution, false)\n  const [ maxX, maxY ] = getTileCoordForXYAndResolution(tileGrid, extent[ 2 ], extent[ 3 ], resolution, true)\n\n  return { minX, minY, maxX, maxY }\n}\n\n/**\n * @param {TileGrid} tileGrid\n * @param {number} x\n * @param {number} y\n * @param {number} resolution\n * @param {boolean} reverseIntersectionPolicy\n * @return {number[]}\n */\nexport function getTileCoordForXYAndResolution (tileGrid, x, y, resolution, reverseIntersectionPolicy) {\n  const z = tileGrid.getZForResolution(resolution)\n  const scale = resolution / tileGrid.getResolution(z)\n  const origin = tileGrid.getOrigin(z)\n  let tileSize = tileGrid.getTileSize(z)\n\n  if (!isArray(tileSize)) {\n    tileSize = [ tileSize, tileSize ]\n  }\n\n  const adjustX = reverseIntersectionPolicy ? 0.5 : 0\n  const adjustY = reverseIntersectionPolicy ? 0 : 0.5\n  const xFromOrigin = Math.floor((x - origin[ 0 ]) / resolution + adjustX)\n  const yFromOrigin = Math.floor((y - origin[ 1 ]) / resolution + adjustY)\n  let tileCoordX = scale * xFromOrigin / tileSize[ 0 ]\n  let tileCoordY = scale * yFromOrigin / tileSize[ 1 ]\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1\n    tileCoordY = Math.ceil(tileCoordY) - 1\n  } else {\n    tileCoordX = Math.floor(tileCoordX)\n    tileCoordY = Math.floor(tileCoordY)\n  }\n\n  return [ tileCoordX, tileCoordY ]\n}\n\n/**\n * @param {{minX, minY, maxX, maxY}} tileRange\n * @return {number}\n */\nexport function getTileRangeHeight (tileRange) {\n  return tileRange.maxY - tileRange.minY + 1\n}\n","/**\n * This file is part of ol-tilecache package.\n * @module ol-tilecache\n * @license MIT\n * @author Vladimir Vershinin\n */\nimport {createXYZ} from 'ol/tilegrid'\nimport { zeroPad, modulo } from './util'\nimport { calculateTileRangeForZ, getTileRangeHeight } from './tile-range'\n\nconst zRegEx = /{z}/g\nconst zPadRegEx = /{0z}/g\nconst xRegEx = /{x\\d?}/g\nconst yRegEx = /{y\\d?}/g\nconst dashYRegEx = /{-y\\d?}/g\n\nconst EPSG3857_EXTENT = [\n  -20037508.342789244,\n  -20037508.342789244,\n  20037508.342789244,\n  20037508.342789244\n]\n\n/**\n * Basic create factory.\n *\n * @param {string} url Url template\n * @param {TileGrid} [tileGrid] Tile grid.\n * @param {Extent|number[]} [extent] Tile grid extent.\n * @returns {function(tileCoord: TileCoord)}\n * @static\n * @public\n */\nexport function createTileUrlFunction (url, tileGrid = createXYZ(), extent = EPSG3857_EXTENT) {\n  return createTileUrlFunctionFromTemplates(expandUrl(url), tileGrid, extent)\n}\n\n/**\n * Creates tile URL function from single template.\n *\n * @param {string} template Source url\n * @param {TileGrid} [tileGrid] Tile grid.\n * @param {Extent|number[]} [extent] Tile grid extent.\n * @returns {function(tileCoord: TileCoord)}\n * @private\n */\nexport function createTileUrlFunctionFromTemplate (template, tileGrid = createXYZ(), extent = EPSG3857_EXTENT) {\n  return (\n    /**\n     * @param {TileCoord} tileCoord Tile Coordinate.\n     * @return {string | undefined} Tile URL.\n     */\n      function (tileCoord) {\n      if (tileCoord != null) {\n        return template.replace(zRegEx, zoomReplacer(tileCoord[ 0 ]))\n          .replace(zPadRegEx, zoomReplacer(tileCoord[ 0 ], true))\n          .replace(xRegEx, coordReplacer(tileCoord[ 1 ]))\n          .replace(yRegEx, function (part) {\n            const y = -tileCoord[ 2 ] - 1\n\n            return coordReplacer(y)(part)\n          })\n          .replace(dashYRegEx, function (part) {\n            const z = tileCoord[ 0 ]\n            // The {-y} placeholder requires a tile grid with extent\n            const range = calculateTileRangeForZ(tileGrid, extent, z)\n            const y = getTileRangeHeight(range) + tileCoord[ 2 ]\n\n            return coordReplacer(y)(part)\n          })\n      }\n    })\n}\n\n/**\n * Creates tile URL function from multiple templates.\n *\n * @param {string[]} templates Url templates\n * @param {TileGrid} [tileGrid] Tile grid.\n * @param {Extent | number[]} [extent] Tile grid extent.\n * @returns {function(tileCoord: TileCoord)}\n * @private\n */\nexport function createTileUrlFunctionFromTemplates (templates, tileGrid = createXYZ(), extent = EPSG3857_EXTENT) {\n  return createTileUrlFunctionFromTileUrlFunctions(\n    templates.map(tileUrlFunction => createTileUrlFunctionFromTemplate(tileUrlFunction, tileGrid, extent))\n  )\n}\n\n/**\n * @param zoom\n * @param pad\n * @returns {function}\n * @private\n */\nfunction zoomReplacer (zoom, pad) {\n  return function () {\n    return pad ? zeroPad(zoom, 2) : zoom.toString()\n  }\n}\n\n/**\n * @param coord\n * @returns {function}\n * @private\n */\nfunction coordReplacer (coord) {\n  return function (part) {\n    const match = part.match(/\\d/)\n\n    if (match) {\n      return zeroPad(coord, 9).slice((match[ 0 ] - 1) * 3, match[ 0 ] * 3)\n    }\n\n    return coord.toString()\n  }\n}\n\n/**\n * @param {string} url\n * @returns {Array.<string>}\n * @private\n */\nfunction expandUrl (url) {\n  const urls = []\n  const match = /{(\\d)-(\\d)}/.exec(url) ||\n                /{([a-z])-([a-z])}/.exec(url)\n\n  if (match) {\n    const startCharCode = match[ 1 ].charCodeAt(0)\n    const stopCharCode = match[ 2 ].charCodeAt(0)\n\n    for (let charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[ 0 ], String.fromCharCode(charCode)))\n    }\n  } else {\n    urls.push(url)\n  }\n\n  return urls\n}\n\n/**\n * @param {Array.<function(tileCoord: TileCoord)>} tileUrlFunctions\n * @returns {function(tileCoord: TileCoord)}\n * @private\n */\nfunction createTileUrlFunctionFromTileUrlFunctions (tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[ 0 ]\n  }\n\n  return (\n    /**\n     * @param {TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {Projection} projection Projection.\n     * @return {string | undefined} Tile URL.\n     */\n      function (tileCoord, pixelRatio, projection) {\n      if (tileCoord != null) {\n        const h = (tileCoord[ 1 ] << tileCoord[ 0 ]) + tileCoord[ 2 ]\n        const index = modulo(h, tileUrlFunctions.length)\n\n        return tileUrlFunctions[ index ](tileCoord, pixelRatio, projection)\n      }\n    })\n}\n","/**\n * This file is part of ol-tilecache package.\n * @module ol-tilecache\n * @license MIT\n * @author Vladimir Vershinin\n */\nimport {\n  createTileUrlFunction,\n  createTileUrlFunctionFromTemplate,\n  createTileUrlFunctionFromTemplates\n} from './tile-url-function'\n\nexport {\n  createTileUrlFunction,\n  createTileUrlFunctionFromTemplate,\n  createTileUrlFunctionFromTemplates\n}\n\n// for backward compatibility\nif (typeof window !== 'undefined' && window.ol) {\n  window.ol.tileCacheUrlFn = {\n    createTileUrlFunction,\n    createTileUrlFunctionFromTemplate,\n    createTileUrlFunctionFromTemplates,\n  }\n}\n"],"names":["zeroPad","num","places","zero","toString","length","Array","parseInt","join","slice","getTileCoordForXYAndResolution","tileGrid","x","y","resolution","reverseIntersectionPolicy","value","z","getZForResolution","scale","getResolution","origin","getOrigin","tileSize","getTileSize","Object","prototype","call","adjustX","adjustY","xFromOrigin","Math","floor","yFromOrigin","tileCoordX","tileCoordY","ceil","zRegEx","zPadRegEx","xRegEx","yRegEx","dashYRegEx","EPSG3857_EXTENT","createTileUrlFunction","url","createXYZ","extent","createTileUrlFunctionFromTemplates","urls","match","exec","startCharCode","charCodeAt","stopCharCode","charCode","push","replace","String","fromCharCode","expandUrl","createTileUrlFunctionFromTemplate","template","tileCoord","zoomReplacer","coordReplacer","part","minX","minY","tileRange","range","maxX","maxY","templates","tileUrlFunctions","map","tileUrlFunction","pixelRatio","projection","h","index","a","b","m","zoom","pad","coord","window","ol","tileCacheUrlFn"],"mappings":"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"}